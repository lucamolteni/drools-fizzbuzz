package org.kie.fizzbuzz

import java.util.*
// This is not needed as it's in the same package
import org.kie.fizzbuzz.FizzBuzzEvaluation;
import java.util.stream.Collectors;

global List<FizzBuzzEvaluation> allNumbers;

rule "printNumber"
when
    $i : Integer( )
then
    insert(new FizzBuzzEvaluation($i, ""));
end

rule "fizz"
when
    $i : Integer( this % 3 == 0)
then
    insert(new FizzBuzzEvaluation($i, "fizz"));
end

rule "buzz"
when
    $i : Integer( this % 5 == 0)
then
    insert(new FizzBuzzEvaluation($i, "buzz"));
end

rule "fizzbuzz"
when
    $i : Integer( this % 3 == 0 && this % 5 == 0)
then
    insert(new FizzBuzzEvaluation($i, "fizzbuzz"));
end

rule "collectIndex"
when
    $f : FizzBuzzEvaluation($n: number, command == "")
    not(exists(FizzBuzzEvaluation(number == $n, command == "fizz")))
    not(exists(FizzBuzzEvaluation(number == $n, command == "buzz")))
    not(exists(FizzBuzzEvaluation(number == $n, command == "fizzbuzz")))
then
    allNumbers.add($f);
end

rule "collectFizz"
when
    $f : FizzBuzzEvaluation($n: number, command == "fizz")
    not(exists(FizzBuzzEvaluation(number == $n, command == "fizzbuzz")))
then
    allNumbers.add($f);
end

rule "collectBuzz"
when
    $b : FizzBuzzEvaluation($n: number, command == "buzz")
    not(exists(FizzBuzzEvaluation(number == $n, command == "fizzbuzz")))
then
    allNumbers.add($b);
end

rule "collectFizzBuzz"
when
    FizzBuzzEvaluation($number: number, command == "fizz")
    FizzBuzzEvaluation(number == $number, command == "buzz")
    $fb : FizzBuzzEvaluation(number == $number, command == "fizzbuzz")
then
    allNumbers.add($fb);
end

rule "print"
when
    $fz : FizzBuzzEvaluation() from allNumbers.stream().sorted().collect(Collectors.toList());
then
    System.out.println($fz.getNumber() + " " + $fz.getCommand());
end
